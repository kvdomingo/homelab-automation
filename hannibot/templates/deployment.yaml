apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hannibot.fullname" . }}
  labels:
    {{- include "hannibot.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hannibot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hannibot.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hannibot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: '{{ .Chart.Name }}-init-wait-db'
          image: '{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}'
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - >
              until pg_isready -h $POSTGRESQL_HOST -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE; do
              sleep 3;
              done;
          envFrom:
            - secretRef:
                name: '{{- include "hannibot.fullname" . }}-secrets'
            - configMapRef:
                name: '{{- include "hannibot.fullname" . }}-configmap'
        - name: '{{ .Chart.Name }}-init-migrations'
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - alembic
            - upgrade
            - head
          envFrom:
            - secretRef:
                name: '{{- include "hannibot.fullname" . }}-secrets'
            - configMapRef:
                name: '{{- include "hannibot.fullname" . }}-configmap'
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
                name: '{{- include "hannibot.fullname" . }}-secrets'
            - configMapRef:
                name: '{{- include "hannibot.fullname" . }}-configmap'
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
