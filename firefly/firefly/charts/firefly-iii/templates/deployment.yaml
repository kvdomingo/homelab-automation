apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "firefly-iii.fullname" . }}
  labels:
    {{- include "firefly-iii.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "firefly-iii.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "firefly-iii.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if or .Values.config.envValueFrom }}
        env:
        {{- range $key, $value := .Values.config.envValueFrom }}
          - name: {{ $key }}
            valueFrom: {{- $value | toYaml | nindent 16 }}
        {{- end }}
        {{- end }}
        {{- if or (.Values.config.env) (.Values.config.existingSecret) }}
        envFrom:
          {{- if .Values.config.env }}
          - configMapRef:
              name: {{ template "firefly-iii.fullname" . }}
          {{- end }}
          {{- if .Values.config.existingSecret }}
          - secretRef:
              name: {{ .Values.config.existingSecret }}
          {{- else if .Values.secrets.env }}
          - secretRef:
              name: {{ template  "firefly-iii.fullname" . }}
          {{- end }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        volumeMounts:
          - name: upload
            mountPath: "/var/www/html/storage/upload"
        {{- end }}
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
        startupProbe:
          httpGet:
            path: /health
            port: http
          # Give the app 30 x 10 = 300s to startup
          failureThreshold: 30
          periodSeconds: 10
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 12 }}
        {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: upload
          persistentVolumeClaim:
            claimName: {{ default (include "firefly-iii.fullname" .)  .Values.persistence.existingClaim }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
