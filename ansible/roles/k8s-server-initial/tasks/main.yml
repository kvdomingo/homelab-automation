- name: Increase inotify values
  loop:
    - fs.inotify.max_user_instances
    - fs.inotify.max_user_watches
    - fs.inotify.max_queued_events
  ansible.posix.sysctl:
    name: '{{ item }}'
    value: 524288
    state: present

- name: Ensure Downloads directory exists
  ansible.builtin.file:
    path: ~/Downloads
    state: directory
    mode: '755'

- name: Setup K3s
  block:
    - name: Download K3s installer
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: ~/Downloads/install-k3s.sh
        mode: '755'

    - name: Install K3s
      environment:
        INSTALL_K3S_CHANNEL: '{{ k8s_version }}'
      ansible.builtin.shell: >
        ~/Downloads/install-k3s.sh
        server
        --cluster-init
        --write-kubeconfig-mode 644
        --disable=traefik,coredns,metrics-server
        --tls-san=srv-k8s-01,srv-k8s-01.lab,srv-k8s-02,srv-k8s-02.lab,srv-k8s-03,srv-k8s-03.lab,k8s.lab.kvd.studio,k8s.kvd.studio
      changed_when: false

- name: Update default registries.yaml
  become: true
  block:
    - name: Copy registries.yaml
      ansible.builtin.copy:
        src: ./files/registries.yaml
        dest: /etc/rancher/k3s/registries.yaml.tmpl
        force: true
        mode: "644"
    - name: Substitute values
      environment:
        DOCKER_PAT: "{{ lookup('env', 'DOCKER_PAT') }}"
      ansible.builtin.shell: >
        envsubst < /etc/rancher/k3s/registries.yaml.tmpl > /etc/rancher/k3s/registries.yaml

- name: Restart K3s
  become: true
  ansible.builtin.systemd:
    name: k3s
    state: restarted

- name: Get kubeconfig
  ansible.builtin.fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ./outputs/kubeconfig.yamlk
    flat: true

- name: Get node token
  ansible.builtin.fetch:
    src: /var/lib/rancher/k3s/server/node-token
    dest: ./outputs/node-token
    flat: true
