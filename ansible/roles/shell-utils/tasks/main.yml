- name: Ensure Downloads directory exists
  ansible.builtin.file:
    path: "{{ USER_HOME }}/Downloads"
    state: directory
    mode: "0755"

- name: Install tmux plugin manager
  ansible.builtin.git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ USER_HOME }}/.tmux/plugins/tpm"
    clone: true
    version: "{{ shell_utils_tpm_version }}"

- name: Setup wakatime
  block:
    - name: Download wakatime
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/wakatime/vim-wakatime/master/scripts/install_cli.py
        dest: "{{ USER_HOME }}/Downloads/install_wakatime.py"
        mode: "0755"
    - name: Install wakatime
      ansible.builtin.script: "{{ USER_HOME }}/Downloads/install_wakatime.py"
      args:
        executable: python
      ignore_errors: true

- name: Install oh-my-zsh
  block:
    - name: Delete existing oh-my-zsh directory
      ansible.builtin.file:
        path: "{{ USER_HOME }}/.oh-my-zsh"
        state: absent
        force: true
    - name: Download oh-my-zsh
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: "{{ USER_HOME }}/Downloads/install-oh-my-zsh.sh"
        mode: "0755"
    - name: Install oh-my-zsh
      ansible.builtin.command:
        chdir: "{{ USER_HOME }}/Downloads"
        cmd: sh install-oh-my-zsh.sh --unattended --keep-zshrc
        creates: "{{ USER_HOME }}/.oh-my-zsh"

- name: Install oh-my-zsh plugins
  block:
    - name: Install wakatime plugin
      ansible.builtin.git:
        repo: https://github.com/sobolevn/wakatime-zsh-plugin.git
        dest: "{{ USER_HOME }}/.oh-my-zsh/custom/plugins/wakatime"
        clone: true
        version: "{{ shell_utils_wakatime_zsh_plugin_version }}"
    - name: Install zsh-autosuggestions plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ USER_HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        clone: true
        version: "{{ shell_utils_zsh_autosuggestions_plugin_version }}"
    - name: Install zsh-history-substring-search plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-history-substring-search
        dest: "{{ USER_HOME }}/.oh-my-zsh/custom/plugins/zsh-history-substring-search"
        clone: true
        version: "{{ shell_utils_zsh_history_substring_search_plugin_version }}"
    - name: Install zsh-tmux-auto-title
      ansible.builtin.git:
        repo: https://github.com/mbenford/zsh-tmux-auto-title
        dest: "{{ USER_HOME }}/.oh-my-zsh/custom/plugins/zsh-tmux-auto-title"
        clone: true
        version: "{{ shell_utils_zsh_tmux_auto_title_plugin_version }}"

- name: Download starship.rs
  ansible.builtin.get_url:
    url: https://starship.rs/install.sh
    dest: "{{ USER_HOME }}/Downloads/install-starship.sh"
    mode: "0755"

- name: Install starship.rs
  ansible.builtin.command:
    chdir: "{{ USER_HOME }}/Downloads"
    cmd: ./install-starship.sh -y
  changed_when: false

- name: Download zoxide
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh
    dest: "{{ USER_HOME }}/Downloads/install-zoxide.sh"
    mode: "0755"

- name: Install zoxide
  ansible.builtin.command:
    chdir: "{{ USER_HOME }}/Downloads"
    cmd: ./install-zoxide.sh
  changed_when: false

- name: Install scram-sha-256
  become: true
  ansible.builtin.get_url:
    url: https://github.com/supercaracal/scram-sha-256/releases/latest/download/scram-sha-256-linux-amd64
    dest: /usr/local/bin/scram-sha-256
    mode: "0755"

- name: Install nvtop
  block:
    - name: Download nvtop
      ansible.builtin.get_url:
        url: https://github.com/Syllo/nvtop/releases/download/{{ shell_utils_nvtop_version }}/nvtop-{{ shell_utils_nvtop_version }}-x86_64.AppImage
        dest: "{{ USER_HOME }}/Downloads/nvtop-{{ shell_utils_nvtop_version }}-x86_64.AppImage"
    - name: Install nvtop
      ansible.builtin.copy:
        src: "{{ USER_HOME }}/Downloads/nvtop-{{ shell_utils_nvtop_version }}-x86_64.AppImage"
        dest: /usr/local/bin/nvtop
        mode: "0755"

- name: Install Infisical
  block:
    - name: Download Infisical setup
      ansible.builtin.get_url:
        url: https://artifacts-cli.infisical.com/setup.deb.sh
        dest: "{{ USER_HOME }}/Downloads/setup-infisical.sh"
        mode: "0755"
    - name: Install Infisical setup
      ansible.builtin.command:
        chdir: "{{ USER_HOME }}/Downloads"
        cmd: ./setup-infisical.sh
      changed_when: false
    - name: Update apt
      ansible.builtin.apt:
        update_cache: true
    - name: Install Infisical
      ansible.builtin.package:
        name: infisical
        state: latest
