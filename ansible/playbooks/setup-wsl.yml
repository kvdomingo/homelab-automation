- name: Initial WSL setup
  hosts: local
  vars:
    JETBRAINS_TOOLBOX_VERSION: jetbrains-toolbox-2.1.3.18901

  tasks:
    - name: Update apt
      become: true
      apt:
        update_cache: true
        upgrade: yes

    - name: Install basics
      become: true
      package:
        name:
          - apache2-utils
          - apt-transport-https
          - asciinema
          - automake
          - autotools-dev
          - bind9-dnsutils
          - btop
          - build-essential
          - ca-certificates
          - curl
          - direnv
          - fzf
          - gcc
          - gedit
          - git
          - gnupg
          - gpg
          - g++
          - htop
          - libbz2-dev
          - libffi-dev
          - libfuse2
          - libgl1
          - libglib2.0-0
          - liblzma-dev
          - libncursesw5-dev
          - libreadline-dev
          - libsqlite3-dev
          - libssl-dev
          - libxmlsec1-dev
          - libxml2-dev
          - lsb-release
          - neofetch
          - net-tools
          - python3
          - tk-dev
          - traceroute
          - tmux
          - unzip
          - wget
          - xsel
          - xz-utils
          - yacc
          - zlib1g-dev
          - zsh
          - zsh-syntax-highlighting
        state: latest

    - name: Setup dotfiles
      block:
        - name: Clone dotrepo
          git:
            repo: https://github.com/kvdomingo/dotrepo.git
            dest: ~/dotrepo
            clone: true
            force: true
        - name: Delete existing .zshrc
          file:
            path: ~/.zshrc
            state: absent
            force: true
        - name: Install dotrepo
          shell:
            chdir: ~/dotrepo
            cmd: ./install
          ignore_errors: true

    - name: Download & install neovim
      get_url:
        url: https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
        dest: ~/.local/bin/nvim
        mode: "0755"

    - name: Install tmux plugin manager
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: ~/.tmux/plugins/tpm
        clone: true

    - name: Install shell utilities
      block:
        - name: Delete existing oh-my-zsh directory
          file:
            path: ~/.oh-my-zsh
            state: absent
            force: true
        - name: Download oh-my-zsh
          get_url:
            url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
            dest: ~/Downloads/install-oh-my-zsh.sh
            mode: "0755"
        - name: Install oh-my-zsh
          shell:
            chdir: ~/Downloads
            cmd: sh install-oh-my-zsh.sh --unattended --keep-zshrc
            creates: ~/.oh-my-zsh
        - name: Install oh-my-zsh plugins
          block:
            - name: Install wakatime plugin
              git:
                repo: https://github.com/sobolevn/wakatime-zsh-plugin.git
                dest: ~/.oh-my-zsh/custom/plugins/wakatime
                clone: true
            - name: Install zsh-autosuggestions plugin
              git:
                repo: https://github.com/zsh-users/zsh-autosuggestions
                dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
                clone: true
            - name: Install zsh-history-substring-search plugin
              git:
                repo: https://github.com/zsh-users/zsh-history-substring-search
                dest: ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
                clone: true
            - name: Install zsh-tmux-auto-title
              git:
                repo: https://github.com/mbenford/zsh-tmux-auto-title
                dest: ~/.oh-my-zsh/custom/plugins/zsh-tmux-auto-title
                clone: true
        - name: Download starship.rs
          get_url:
            url: https://starship.rs/install.sh
            dest: ~/Downloads/install-starship.sh
            mode: "0755"
        - name: Install starship.rs
          shell:
            chdir: ~/Downloads
            cmd: ./install-starship.sh -y
        - name: Download zoxide
          get_url:
            url: https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh
            dest: ~/Downloads/install-zoxide.sh
            mode: "0755"
        - name: Install zoxide
          shell:
            chdir: ~/Downloads
            cmd: ./install-zoxide.sh

    - name: Install mise
      block:
        - name: Download mise installer
          get_url:
            url: https://mise.run
            dest: ~/Downloads/install-mise.sh
            mode: "0755"
        - name: Install mise
          shell:
            chdir: ~/Downloads
            cmd: ./install-mise.sh
        - name: Install mise plugins/tools
          shell: mise install --yes

    - name: Install/update global Python packages
      pip:
        name:
          - pip
          - pre-commit
          - ansible
        state: latest

    - name: Install/update global Node.js package managers
      block:
        - name: Install npm
          npm:
            name: npm
            state: latest
            global: true
        - name: Install yarn
          npm:
            name: yarn
            state: latest
            global: true
        - name: Install pnpm
          npm:
            name: pnpm
            state: latest
            global: true

    - name: Install/update global Go packages
      shell:
        cmd: |
          go install github.com/cosmtrek/air@latest
          go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          go install github.com/jesseduffield/lazygit@latest
          go install github.com/jesseduffield/lazydocker@latest
          go install github.com/owenrumney/lazytrivy@latest

    - name: Setup k8s development environment
      block:
        - name: Ensure kubeconfig is not world-readable
          file:
            path: ~/.kube/config
            state: file
            mode: "0600"
        - name: Copy kubeconfig
          copy:
            src: ~/.kube/config
            dest: ~/.kube/config.yaml
            mode: "0600"
        - name: Install Krew
          shell:
            cmd: |
              (
                set -x; cd "$(mktemp -d)" &&
                OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
                ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
                KREW="krew-${OS}_${ARCH}" &&
                curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
                tar zxvf "${KREW}.tar.gz" &&
                ./"${KREW}" install krew
              )
        - name: Install kubens/kubectx
          shell:
            cmd: kubectl krew install ctx ns
        - name: Install Helm diff
          shell:
            cmd: helm plugin install https://github.com/databus23/helm-diff

    - name: Setup wakatime
      block:
        - name: Download wakatime
          get_url:
            url: https://raw.githubusercontent.com/wakatime/vim-wakatime/master/scripts/install_cli.py
            dest: ~/Downloads/install_wakatime.py
            mode: "0755"
        - name: Install wakatime
          script: ~/Downloads/install_wakatime.py
          args:
            executable: python

    - name: Setup JetBrains Toolbox
      block:
        - name: Download JetBrains Toolbox
          get_url:
            url: https://download.jetbrains.com/toolbox/{{ JETBRAINS_TOOLBOX_VERSION }}.tar.gz
            dest: ~/Downloads/{{ JETBRAINS_TOOLBOX_VERSION }}.tar.gz
        - name: Untar JetBrains Toolbox
          unarchive:
            src: ~/Downloads/{{ JETBRAINS_TOOLBOX_VERSION }}.tar.gz
            dest: ~/Downloads
        - name: Install JetBrains Toolbox
          shell:
            chdir: ~/Downloads/{{ JETBRAINS_TOOLBOX_VERSION }}
            cmd: ./jetbrains-toolbox
            creates: ~/.local/share/JetBrains/Toolbox/bin/jetbrains-toolbox

    - name: Install Supabase CLI
      block:
        - name: Download Supabase CLI
          get_url:
            url: https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz
            dest: ~/Downloads/supabase_linux_amd64.tar.gz
        - name: Extract Supabase CLI
          unarchive:
            src: ~/Downloads/supabase_linux_amd64.tar.gz
            dest: ~/Downloads
        - name: Install Supabase CLI
          become: true
          copy:
            src: ~/Downloads/supabase
            dest: /usr/local/bin/supabase
            mode: "0755"
