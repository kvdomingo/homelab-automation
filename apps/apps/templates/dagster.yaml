{{- if not .Values.disableDagster }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dagster
  namespace: {{ include "apps.argocdNamespace" . | quote }}
  finalizers:
    {{- include "apps.finalizers" . | nindent 4 }}
spec:
  project: {{ .Values.project }}
  sources:
    - repoURL: https://dagster-io.github.io/helm
      chart: dagster
      targetRevision: 1.10.14
      plugin:
        name: argocd-vault-plugin-helm
        env:
          - name: HELM_VALUES
            value: |
              dagsterWebserver:
                replicaCount: 3
                workspace:
                  enabled: true
                  servers: [ ]
                enableReadOnly: false
                affinity:
                  podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      - weight: 100
                        podAffinityTerm:
                          topologyKey: kubernetes.io/hostname
                          labelSelector:
                            matchExpressions:
                              - key: app.kubernetes.io/name
                                operator: In
                                values: [ dagster-webserver ]
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: NotIn
                              values: [ arm64, arm ]
              dagster-user-deployments:
                enableSubchart: false
              postgresql:
                enabled: false
                postgresqlHost: 10.10.10.103
                postgresqlUsername: dagster
                postgresqlPassword: "<path:kv/data/lab/dagster#POSTGRESQL_PASSWORD>"
                postgresqlDatabase: dagster
              flower:
                enabled: false
              ingress:
                apiVersion: networking.k8s.io/v1/Ingress
                enabled: true
                ingressClassName: traefik
                annotations:
                  gethomepage.dev/enabled: "true"
                  gethomepage.dev/name: "Dagster"
                  gethomepage.dev/group: "DataOps"
                  gethomepage.dev/icon: "https://dagster.io/images/brand/logos/dagster-primary-mark.png"
                  gethomepage.dev/ping: "https://dagster.{{ .Values.ingress.baseDomain }}/server_info"
                dagsterWebserver:
                  host: "dagster.{{ .Values.ingress.baseDomain }}"
                  path: /
                  pathType: Prefix
                readOnlyDagsterWebserver:
                  host: "dagster-ro.{{ .Values.ingress.baseDomain }}"
                  path: /
                  pathType: Prefix
                flower:
                  host: "dagster-flower.{{ .Values.ingress.baseDomain }}"
                  path: /
                  pathType: Prefix
              dagsterDaemon:
                runCoordinator:
                  config:
                    queuedRunCoordinator:
                      maxConcurrentRuns: 4
                affinity:
                  podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      - weight: 100
                        podAffinityTerm:
                          topologyKey: kubernetes.io/hostname
                          labelSelector:
                            matchExpressions:
                              - key: app.kubernetes.io/name
                                operator: In
                                values: [ dagster-daemon ]
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: NotIn
                              values: [ arm64, arm ]
              runLauncher:
                config:
                  celeryK8sRunLauncher:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                            - matchExpressions:
                                - key: kubernetes.io/arch
                                  operator: NotIn
                                  values: [ arm64, arm ]
  destination:
    server: {{ .Values.destination.server }}
    namespace: dagster
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
{{- end }}
