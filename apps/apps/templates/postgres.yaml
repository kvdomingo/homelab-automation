{{- if not .Values.disablePostgres }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgres
  namespace: {{ include "apps.argocdNamespace" . | quote }}
  finalizers:
    {{- include "apps.finalizers" . | nindent 4 }}
spec:
  project: {{ .Values.project }}
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: postgresql-ha
    targetRevision: 15.1.4
    plugin:
      name: argocd-vault-plugin-helm
      env:
        - name: HELM_VALUES
          value: |
            global:
              postgresql:
                username: postgres
                password: "<path:kv/data/lab/postgres#POSTGRESQL_PASSWORD>"
                database: postgres
                repmgrUsername: repmgr
                repmgrPassword: "<path:kv/data/lab/postgres#REPMGR_PASSWORD>"
                repmgrDatabase: repmgr
              pgpool:
                adminUsername: pgpool
                adminPassword: "<path:kv/data/lab/postgres#PGPOOL_PASSWORD>"
            postgresql:
              image:
                tag: 17.2.0-debian-12-r7
              replicaCount: 3
              livenessProbe:
                enabled: true
                periodSeconds: 20
                timeoutSeconds: 3
                successThreshold: 1
                failureThreshold: 3
                initialDelaySeconds: 30
              readinessProbe:
                enabled: false
              startupProbe:
                enabled: true
                periodSeconds: 10
                timeoutSeconds: 3
                successThreshold: 1
                failureThreshold: 60
                initialDelaySeconds: 30
              pdb:
                create: true
                minAvailable: 2
              audit:
                logConnections: true
                logDisconnections: true
              sharedPreloadLibraries: "pgaudit, repmgr"
              maxConnections: 200
              extendedConf: |
                superuser_reserved_connections = 10
                shared_buffers = 4GB
                huge_pages = try
                work_mem = 64MB
                hash_mem_multiplier = 8.0
                maintenance_work_mem = 1GB
                max_prepared_transactions = 0
                vacuum_cost_delay = 20
                vacuum_cost_limit = 2000
                bgwriter_delay = 10ms
                bgwriter_lru_maxpages = 800
                bgwriter_lru_multiplier = 5.0
                effective_io_concurrency = 1000
                max_worker_processes = 8
                max_parallel_workers = 8
                max_parallel_workers_per_gather = 0
                max_parallel_maintenance_workers = 1
                wal_log_hints = on
                wal_buffers = 16MB
                wal_writer_delay = 20ms
                wal_writer_flush_after = 1MB
                commit_delay = 20
                commit_siblings = 10
                checkpoint_timeout = 15min
                checkpoint_completion_target = 0.8
                max_wal_size = 4GB
                min_wal_size = 1GB
                max_wal_senders = 50
                max_replication_slots = 50
                max_slot_wal_keep_size = 102400
                track_commit_timestamp = on
                max_standby_archive_delay = 10min
                max_standby_streaming_delay = 3min
                wal_receiver_status_interval = 1s
                wal_receiver_timeout = 60s
                max_logical_replication_workers = 8
                max_sync_workers_per_subscription = 6
                random_page_cost = 1.1
                effective_cache_size = 8GB
                default_statistics_target = 400
                log_destination = csvlog
                logging_collector = on
                log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
                log_min_duration_statement = 100
                log_autovacuum_min_duration = 1s
                log_checkpoints = on
                log_lock_waits = on
                log_statement = ddl
                log_replication_commands = on
                track_activity_query_size = 8192
                track_io_timing = on
                track_functions = all
                deadlock_timeout = 50ms
                max_locks_per_transaction = 1000
                auto_explain.log_min_duration = 1s
                auto_explain.log_analyze = on
                auto_explain.log_verbose = on
                auto_explain.log_timing = on
                auto_explain.log_nested_statements = true
                pg_stat_statements.max = 10000
                pg_stat_statements.track = all
                pg_stat_statements.track_utility = off
                pg_stat_statements.track_planning = off
            pgpool:
              replicaCount: 1
              pdb:
                create: false
            metrics:
              enabled: true
            volumePermissions:
              enabled: true
            persistence:
              enabled: true
              annotations:
                argocd.argoproj.io/sync-options: Delete=false,Prune=false
            persistentVolumeClaimRetentionPolicy:
              enabled: true
            backup:
              enabled: true
              cronjob:
                schedule: "0 19 * * *"
                timeZone: UTC
                storage:
                  annotations:
                    argocd.argoproj.io/sync-options: Delete=false,Prune=false
  destination:
    server: {{ .Values.destination.server }}
    namespace: postgres
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
{{- end }}
