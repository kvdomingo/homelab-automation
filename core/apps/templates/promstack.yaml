{{- if not .Values.disablePromstack }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: promstack
  namespace: {{ include "apps.argocdNamespace" . | quote }}
  finalizers:
    {{- include "apps.finalizers" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/compare-options: ServerSideDiff=true
spec:
  project: {{ .Values.project }}
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: kube-prometheus
    targetRevision: 9.6.2
    plugin:
      name: argocd-vault-plugin-helm
      env:
        - name: HELM_VALUES
          value: |
            prometheus:
              pdb:
                create: true
                minAvailable: 2
              ingress:
                enabled: true
                pathType: Prefix
                hostname: "prometheus.{{ .Values.ingress.baseDomain }}"
                annotations:
                  gethomepage.dev/enabled: "true"
                  gethomepage.dev/name: "Prometheus"
                  gethomepage.dev/group: "Monitoring"
                  gethomepage.dev/icon: "prometheus.png"
                  gethomepage.dev/ping: "http://promstack-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090"
                  gethomepage.dev/widget.type: "prometheus"
                  gethomepage.dev/widget.url: "https://prometheus.{{ .Values.ingress.baseDomain }}"
              scrapeInterval: 3m
              retention: 14d
              walCompression: true
              persistence:
                enabled: true
                annotations:
                  argocd.argoproj.io/sync-options: Delete=false,Prune=false
              resourcesPreset: large
              thanos:
                create: true
                ingress:
                  enabled: true
                  pathType: Prefix
                  hostname: "thanos.{{ .Values.ingress.baseDomain }}"
                  annotations:
                    gethomepage.dev/enabled: "true"
                    gethomepage.dev/name: "Thanos"
                    gethomepage.dev/group: "Monitoring"
                    gethomepage.dev/icon: "thanos.png"
                    gethomepage.dev/ping: "thanos.{{ .Values.ingress.baseDomain }}"
                resourcesPreset: micro
            alertmanager:
              pdb:
                create: true
                minAvailable: 2
              ingress:
                enabled: true
                pathType: Prefix
                hostname: "alertmanager.{{ .Values.ingress.baseDomain }}"
                annotations:
                  gethomepage.dev/enabled: "true"
                  gethomepage.dev/name: "Alertmanager"
                  gethomepage.dev/group: "Monitoring"
                  gethomepage.dev/icon: "alertmanager.png"
                  gethomepage.dev/ping: "alertmanager.{{ .Values.ingress.baseDomain }}"
              config:
                global:
                  resolve_timeout: 5m
                route:
                  receiver: discord
                  group_by: [ 'job' ]
                  group_wait: 30s
                  group_interval: 5m
                  repeat_interval: 12h
                  routes:
                    - match:
                        alertname: Watchdog
                      receiver: discord
                receivers:
                  - name: discord
                    discord_configs:
                      - webhook_url: "<path:kv/data/lab/promstack#DISCORD_WEBHOOK_URL>"
              persistence:
                enabled: true
                annotations:
                  argocd.argoproj.io/sync-options: Delete=false,Prune=false
            blackboxExporter:
              pdb:
                create: true
                minAvailable: 2
              replicaCount: 3
  destination:
    server: {{ .Values.destination.server }}
    namespace: monitoring
  syncPolicy:
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
{{- end }}
