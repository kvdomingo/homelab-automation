apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ include "solidtime.fullname" . }}-app'
  labels:
    {{- include "solidtime.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "solidtime.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "solidtime.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "solidtime.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-wait-db
          image: "postgres:17"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: '{{- include "solidtime.fullname" . }}-configmap'
            - secretRef:
                name: '{{- include "solidtime.fullname" . }}-secrets'
          command:
            - /bin/sh
            - -c
            - >
              until pg_isready -h $DB_HOST -U $DB_USERNAME -d $DB_DATABASE; do
              sleep 2;
              done;
        - name: init-migrate-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: '{{- include "solidtime.fullname" . }}-configmap'
            - secretRef:
                name: '{{- include "solidtime.fullname" . }}-secrets'
          command: [ php, artisan, migrate, --force ]
        - name: init-initialize-folders
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: '{{- include "solidtime.fullname" . }}-configmap'
            - secretRef:
                name: '{{- include "solidtime.fullname" . }}-secrets'
          command:
            - /bin/sh
            - -eu
            - -c
            - >
              php artisan cache:clear;
              php artisan config:clear;
              php artisan view:clear;
              mkdir -p storage/logs;
              mkdir -p storage/framework/{cache,sessions,views};
              chmod -R 775 storage/framework;
      containers:
        - name: "{{ .Chart.Name }}-app"
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: app-storage
              mountPath: /var/www/html/storage
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: '{{- include "solidtime.fullname" . }}-configmap'
            - secretRef:
                name: '{{- include "solidtime.fullname" . }}-secrets'
          env:
            - name: CONTAINER_MODE
              value: http
      volumes:
        - name: app-storage
          persistentVolumeClaim:
            claimName: '{{- include "solidtime.fullname" . }}-app-storage'
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
