# Default values for sonarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: lscr.io/linuxserver/sonarr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "4.0.0"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext:
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000
#  runAsGroup: 1000

service:
  type: ClusterIP
  port: 8989

ingress:
  enabled: true
  className: ""
  annotations:
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "Sonarr"
    gethomepage.dev/group: "Media"
    gethomepage.dev/icon: "sonarr.png"
    gethomepage.dev/ping: "sonarr.lab.kvd.studio"
  hosts:
    - host: sonarr.lab.kvd.studio
      paths:
        - path: /
          pathType: Prefix
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: config
    persistentVolumeClaim:
      claimName: sonarr-config
  - name: downloads
    persistentVolumeClaim:
      claimName: qbittorrent-downloads
  - name: series
    persistentVolumeClaim:
      claimName: jellyfin-series

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: config
    mountPath: /config
  - name: downloads
    mountPath: /downloads
  - name: series
    mountPath: /tv

nodeSelector: { }

tolerations: [ ]

affinity: { }
