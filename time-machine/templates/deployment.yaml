apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "time-machine.fullname" . }}
  labels:
    {{- include "time-machine.labels" . | nindent 4 }}
  annotations:
    {{ toYaml .Values.annotations | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "time-machine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "time-machine.labels" . | nindent 8 }}
 {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "time-machine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/live
              port: http
          readinessProbe:
            httpGet:
              path: /api/ready
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: time-machine-configmap
            - secretRef:
                name: time-machine-secrets
      initContainers:
        - name: init-wait-db
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: time-machine-configmap
            - secretRef:
                name: time-machine-secrets
          command:
            - /bin/sh
            - -c
            - >
              until pg_isready -h $POSTGRESQL_HOST -U $POSTGRESQL_USERNAME -d $POSTGRESQL_DATABASE; do
              sleep 2;
              done;
        - name: init-migrate-db
          image: "{{ .Values.migrate.image.repository }}:{{ .Values.migrate.image.tag }}"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: time-machine-configmap
            - secretRef:
                name: time-machine-secrets
          command:
            - /bin/sh
            - -c
            - >
              migrate
              -source file://migrations
              -database postgres://$POSTGRESQL_USERNAME:$POSTGRESQL_PASSWORD@$POSTGRESQL_HOST:$POSTGRESQL_PORT/$POSTGRESQL_DATABASE?sslmode=disable
              up
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    {{- include "time-machine.selectorLabels" . | nindent 20 }}
              weight: 100
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
